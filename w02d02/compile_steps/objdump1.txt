
prog.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	89 7d dc             	mov    %edi,-0x24(%rbp)
   b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   f:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  13:	75 28                	jne    3d <main+0x3d>
  15:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 1c <main+0x1c>
  1c:	48 89 c1             	mov    %rax,%rcx
  1f:	ba 21 00 00 00       	mov    $0x21,%edx
  24:	be 01 00 00 00       	mov    $0x1,%esi
  29:	bf 00 00 00 00       	mov    $0x0,%edi
  2e:	e8 00 00 00 00       	callq  33 <main+0x33>
  33:	b8 01 00 00 00       	mov    $0x1,%eax
  38:	e9 a0 00 00 00       	jmpq   dd <main+0xdd>
  3d:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%rbp)
  44:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 4b <main+0x4b>
  4b:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
  4f:	be 00 00 00 00       	mov    $0x0,%esi
  54:	48 89 c7             	mov    %rax,%rdi
  57:	b8 00 00 00 00       	mov    $0x0,%eax
  5c:	e8 00 00 00 00       	callq  61 <main+0x61>
  61:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  65:	48 83 c0 08          	add    $0x8,%rax
  69:	48 8b 00             	mov    (%rax),%rax
  6c:	48 89 c7             	mov    %rax,%rdi
  6f:	e8 00 00 00 00       	callq  74 <main+0x74>
  74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  78:	48 83 c0 10          	add    $0x10,%rax
  7c:	48 8b 00             	mov    (%rax),%rax
  7f:	48 89 c7             	mov    %rax,%rdi
  82:	e8 00 00 00 00       	callq  87 <main+0x87>
  87:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  8e:	00 
  8f:	bf 0a 00 00 00       	mov    $0xa,%edi
  94:	e8 00 00 00 00       	callq  99 <main+0x99>
  99:	89 c2                	mov    %eax,%edx
  9b:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # a2 <main+0xa2>
  a2:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  a6:	48 89 ce             	mov    %rcx,%rsi
  a9:	48 89 c7             	mov    %rax,%rdi
  ac:	b8 00 00 00 00       	mov    $0x0,%eax
  b1:	e8 00 00 00 00       	callq  b6 <main+0xb6>
  b6:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # bd <main+0xbd>
  bd:	48 89 c7             	mov    %rax,%rdi
  c0:	b8 00 00 00 00       	mov    $0x0,%eax
  c5:	e8 00 00 00 00       	callq  ca <main+0xca>
  ca:	bf 0a 00 00 00       	mov    $0xa,%edi
  cf:	e8 00 00 00 00       	callq  d4 <main+0xd4>
  d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  d8:	b8 00 00 00 00       	mov    $0x0,%eax
  dd:	c9                   	leaveq 
  de:	c3                   	retq   

00000000000000df <open_file>:
  df:	55                   	push   %rbp
  e0:	48 89 e5             	mov    %rsp,%rbp
  e3:	48 83 ec 10          	sub    $0x10,%rsp
  e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  ef:	be 00 00 00 00       	mov    $0x0,%esi
  f4:	48 89 c7             	mov    %rax,%rdi
  f7:	e8 00 00 00 00       	callq  fc <open_file+0x1d>
  fc:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 103 <open_file+0x24>
 103:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 10a <open_file+0x2b>
 10a:	48 85 c0             	test   %rax,%rax
 10d:	75 0a                	jne    119 <open_file+0x3a>
 10f:	bf 00 00 00 00       	mov    $0x0,%edi
 114:	e8 00 00 00 00       	callq  119 <open_file+0x3a>
 119:	90                   	nop
 11a:	c9                   	leaveq 
 11b:	c3                   	retq   

000000000000011c <write_input_string>:
 11c:	55                   	push   %rbp
 11d:	48 89 e5             	mov    %rsp,%rbp
 120:	48 83 ec 10          	sub    $0x10,%rsp
 124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 128:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 12f <write_input_string+0x13>
 12f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 133:	be 00 00 00 00       	mov    $0x0,%esi
 138:	48 89 c7             	mov    %rax,%rdi
 13b:	b8 00 00 00 00       	mov    $0x0,%eax
 140:	e8 00 00 00 00       	callq  145 <write_input_string+0x29>
 145:	90                   	nop
 146:	c9                   	leaveq 
 147:	c3                   	retq   

0000000000000148 <close_file>:
 148:	55                   	push   %rbp
 149:	48 89 e5             	mov    %rsp,%rbp
 14c:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 153 <close_file+0xb>
 153:	48 89 c7             	mov    %rax,%rdi
 156:	e8 00 00 00 00       	callq  15b <close_file+0x13>
 15b:	85 c0                	test   %eax,%eax
 15d:	74 0a                	je     169 <close_file+0x21>
 15f:	bf 00 00 00 00       	mov    $0x0,%edi
 164:	e8 00 00 00 00       	callq  169 <close_file+0x21>
 169:	90                   	nop
 16a:	5d                   	pop    %rbp
 16b:	c3                   	retq   

000000000000016c <fibonacci>:
 16c:	55                   	push   %rbp
 16d:	48 89 e5             	mov    %rsp,%rbp
 170:	53                   	push   %rbx
 171:	48 83 ec 28          	sub    $0x28,%rsp
 175:	89 7d dc             	mov    %edi,-0x24(%rbp)
 178:	8b 45 dc             	mov    -0x24(%rbp),%eax
 17b:	89 45 ec             	mov    %eax,-0x14(%rbp)
 17e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
 182:	75 07                	jne    18b <fibonacci+0x1f>
 184:	b8 00 00 00 00       	mov    $0x0,%eax
 189:	eb 2b                	jmp    1b6 <fibonacci+0x4a>
 18b:	83 7d ec 01          	cmpl   $0x1,-0x14(%rbp)
 18f:	75 07                	jne    198 <fibonacci+0x2c>
 191:	b8 01 00 00 00       	mov    $0x1,%eax
 196:	eb 1e                	jmp    1b6 <fibonacci+0x4a>
 198:	8b 45 ec             	mov    -0x14(%rbp),%eax
 19b:	83 e8 01             	sub    $0x1,%eax
 19e:	89 c7                	mov    %eax,%edi
 1a0:	e8 00 00 00 00       	callq  1a5 <fibonacci+0x39>
 1a5:	89 c3                	mov    %eax,%ebx
 1a7:	8b 45 ec             	mov    -0x14(%rbp),%eax
 1aa:	83 e8 02             	sub    $0x2,%eax
 1ad:	89 c7                	mov    %eax,%edi
 1af:	e8 00 00 00 00       	callq  1b4 <fibonacci+0x48>
 1b4:	01 d8                	add    %ebx,%eax
 1b6:	48 83 c4 28          	add    $0x28,%rsp
 1ba:	5b                   	pop    %rbx
 1bb:	5d                   	pop    %rbp
 1bc:	c3                   	retq   
